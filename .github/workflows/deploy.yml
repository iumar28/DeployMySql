name: Deploy to EC2 and Run Docker

on:
  workflow_run:
    workflows: ["Build and Dockerize"]
    types:
      - completed

jobs:
  check-status:
    runs-on: ubuntu-latest
    steps:
      - name: Print message
        run: echo "Workflow received completion status from Build and Dockerize."

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: check-status
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_PUBLIC_KEY: ${{ secrets.EC2_PUBLIC_KEY }}
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Step 2: Check environment variables (optional for debugging purposes)
      - name: Check environment variables
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}"
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "EC2_PUBLIC_KEY=${{ secrets.EC2_PUBLIC_KEY }}"

      # Step 3: SSH into EC2 Instance and Deploy Docker Image
      - name: SSH into EC2 Instance and Deploy Docker Image
        run: |
          
          # Set up the SSH key and permissions
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2-keypair.pem
          chmod 600 ~/.ssh/ec2-keypair.pem

          mkdir -p ~/.ssh
          # Add EC2 IP to known hosts to avoid prompt
          ssh-keyscan -H 35.175.152.81 >> ~/.ssh/known_hosts

          # SSH into EC2 instance
          ssh -i ~/.ssh/ec2-keypair.pem ubuntu@35.175.152.81 <<EOF
            # Install Docker and Docker Compose
            sudo apt update
            sudo apt update
            sudo systemctl start docker
            sudo systemctl enable docker
           
            # Add user to Docker group
            sudo usermod -aG docker ubuntu

            # Install Docker Compose
            sudo apt install -y python3-pip
            sudo pip3 install docker-compose

            # Pull Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/deploymysql:latest

            # Clone docker-compose repository
            git clone https://github.com/iumar288/DockerCompose
            cd DockerCompose/mysql

            # Run Docker Compose to deploy
            docker-compose up -d
          EOF
